{"version":3,"sources":["_helpers/fake-backend.js","_helpers/history.js","_constants/alert.constants.js","_constants/user.constants.js","_constants/modal-actions.constants.js","_reducers/modal.reducer.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/registration.reducer.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_helpers/store.js","_helpers/auth-header.js","_actions/alert.actions.js","_services/user.service.js","_actions/user.actions.js","_actions/modal.actions.js","_components/PrivateRoute.jsx","App/ModalRoot.jsx","_components/Modals/TradeModal.jsx","HomePage/HomePage.jsx","LoginPage/LoginPage.jsx","RegisterPage/RegisterPage.jsx","App/App.jsx","index.jsx"],"names":["JSON","parse","localStorage","getItem","history","createBrowserHistory","alertConstants","SUCCESS","ERROR","CLEAR","userConstants","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","BUY_REQUEST","BUY_SUCCESS","BUY_FAILURE","SELL_REQUEST","SELL_SUCCESS","SELL_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","modalActions","initialState","modalType","modalProps","user","rates","loggedIn","rootReducer","combineReducers","authentication","state","arguments","length","undefined","action","type","loggingIn","loading","userid","id","error","registration","registering","users","items","Object","objectSpread","map","deleting","filter","userCopy","objectWithoutProperties","deleteError","modal","alert","message","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","Authorization","alertActions","success","clear","userService","buyBtc","pair","amount","requestOptions","method","headers","Content-Type","body","stringify","fetch","then","handleResponse","response","_response$text","text","setItem","sellBtc","_response$text2","login","username","hashedPassword","Promise","all","data","logout","register","getAll","getById","concat","update","delete","removeItem","ok","status","location","reload","statusText","reject","userActions","dispatch","request","_ref2","catch","failure","toString","_ref3","password","_ref","push","PrivateRoute","Component","component","rest","react_default","a","createElement","Route","assign","render","props","Redirect","to","pathname","from","MODAL_TYPES","trade","closeModal","confirmAction","title","fields","onInputChange","onRadioChange","tradeCrypto","className","aria-label","onClick","aria-hidden","layout","field","key","label","htmlFor","name","placeholder","onChange","ModalContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modalIsOpen","bind","assertThisInitialized","nextProps","setState","open","SpecifiedModal","lib_default","isOpen","onRequestClose","contentLabel","ariaHideApp","bodyOpenClassName","React","connect","HomePage","openTradeModal","_this2","e","event","defineProperty","target","value","preventDefault","submitted","btc","hideModal","showModal","crypto","_this$props","totalBTCValue","balances","Number","xmr","ltc","salt","doge","usd","_getBTCValue","totalUSDValue","toFixed","Link","ModalRoot","connectedHomePage","LoginPage","handleChange","handleSubmit","_e$target","_this$state","digest","_this$state2","onSubmit","connectedLoginPage","RegisterPage","_event$target","connectedRegisterPage","App","listen","Router","PrivateRoute_PrivateRoute","exact","path","connectedApp","es","document","getElementById"],"mappings":"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","file":"static/js/main.2f23e042.chunk.js","sourcesContent":["// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n    \nexport function configureFakeBackend() {\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            token: 'fake-jwt-token'\n                        };\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\n                    } else {\n                        // else return error\n                        reject('Username or password is incorrect');\n                    }\n\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(users))});\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // get user by id\n                if (url.match(/\\/users\\/\\d+$/) && opts.method === 'GET') {\n                    // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\n                        // find user by id in users array\n                        let urlParts = url.split('/');\n                        let id = parseInt(urlParts[urlParts.length - 1]);\n                        let matchedUsers = users.filter(user => { return user.id === id; });\n                        let user = matchedUsers.length ? matchedUsers[0] : null;\n\n                        // respond 200 OK with user\n                        resolve({ ok: true, text: () => JSON.stringify(user)});\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // register user\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\n                    // get new user object from post body\n                    let newUser = JSON.parse(opts.body);\n\n                    // validation\n                    let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\n                    if (duplicateUser) {\n                        reject('Username \"' + newUser.username + '\" is already taken');\n                        return;\n                    }\n\n                    // save new user\n                    newUser.id = users.length ? Math.max(...users.map(user => user.id)) + 1 : 1;\n                    users.push(newUser);\n                    localStorage.setItem('users', JSON.stringify(users));\n\n                    // respond 200 OK\n                    resolve({ ok: true, text: () => Promise.resolve() });\n\n                    return;\n                }\n\n                // delete user\n                if (url.match(/\\/users\\/\\d+$/) && opts.method === 'DELETE') {\n                    // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\n                        // find user by id in users array\n                        let urlParts = url.split('/');\n                        let id = parseInt(urlParts[urlParts.length - 1]);\n                        for (let i = 0; i < users.length; i++) {\n                            let user = users[i];\n                            if (user.id === id) {\n                                // delete user\n                                users.splice(i, 1);\n                                localStorage.setItem('users', JSON.stringify(users));\n                                break;\n                            }\n                        }\n\n                        // respond 200 OK\n                        resolve({ ok: true, text: () => Promise.resolve() });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n            }, 500);\n        });\n    }\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};\n","export const userConstants = {\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    BUY_REQUEST: 'USERS_BUY_REQUEST',\n    BUY_SUCCESS: 'USERS_BUY_SUCCESS',\n    BUY_FAILURE: 'USERS_BUY_FAILURE',\n\n    SELL_REQUEST: 'USERS_SELL_REQUEST',\n    SELL_SUCCESS: 'USERS_SELL_SUCCESS',\n    SELL_FAILURE: 'USERS_SELL_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'\n};\n","export const modalActions = {\n  HIDE_MODAL: 'HIDE_MODAL',\n  SHOW_MODAL: 'SHOW_MODAL'\n};\n","import { modalActions } from '../_constants';\n\nconst initialState = {\n    modalType: null,\n    modalProps: {}\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case modalActions.SHOW_MODAL:\n            return {\n                modalProps: action.modalProps,\n                modalType: action.modalType,\n                type: action.type\n            }\n        case modalActions.HIDE_MODAL:\n            return initialState\n        default:\n            return state\n    }\n}","import {\n    userConstants\n} from '../_constants';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nlet rates = JSON.parse(localStorage.getItem('rates'))\nconst initialState = user ? {\n    loggedIn: true,\n    user,\n    rates\n} : {};\n\nexport function authentication(state = initialState, action) {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user,\n                rates: action.rates\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        case userConstants.BUY_REQUEST:\n            return {\n                loading: true\n            };\n        case userConstants.BUY_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user,\n                rates: action.rates\n            };\n        case userConstants.BUY_FAILURE:\n            return {\n                loggedIn: true,\n                userid: action.id,\n                error: action.error\n            };\n        case userConstants.SELL_REQUEST:\n            return {\n                loading: true\n            };\n        case userConstants.SELL_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user,\n                rates: action.rates\n            };\n        case userConstants.SELL_FAILURE:\n            return {\n                loggedIn: true,\n                userid: action.id,\n                error: action.error\n            };\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport modal from './modal.reducer';\n\nimport { authentication } from './authentication.reducer';\nimport { registration } from './registration.reducer';\nimport { users } from './users.reducer';\nimport { alert } from './alert.reducer';\n\nconst rootReducer = combineReducers({\n  authentication,\n  registration,\n  users,\n  modal,\n  alert\n});\n\nexport default rootReducer;","import { userConstants } from '../_constants';\n\nexport function registration(state = {}, action) {\n  switch (action.type) {\n    case userConstants.REGISTER_REQUEST:\n      return { registering: true };\n    case userConstants.REGISTER_SUCCESS:\n      return {};\n    case userConstants.REGISTER_FAILURE:\n      return {};\n    default:\n      return state\n  }\n}","import {\n    userConstants\n} from '../_constants';\n\nexport function users(state = {}, action) {\n    switch (action.type) {\n        case userConstants.GETALL_REQUEST:\n            return {\n                loading: true\n            };\n        case userConstants.GETALL_SUCCESS:\n            return {\n                items: action.users\n            };\n        case userConstants.GETALL_FAILURE:\n            return {\n                error: action.error\n            };\n        case userConstants.DELETE_REQUEST:\n            // add 'deleting:true' property to user being deleted\n            return {\n                ...state,\n                items: state.items.map(user =>\n                    user.id === action.id ?\n                    {\n                        ...user,\n                        deleting: true\n                    } :\n                    user\n                )\n            };\n        case userConstants.DELETE_SUCCESS:\n            // remove deleted user from state\n            return {\n                items: state.items.filter(user => user.id !== action.id)\n            };\n        case userConstants.DELETE_FAILURE:\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user\n            return {\n                ...state,\n                items: state.items.map(user => {\n                    if (user.id === action.id) {\n                        // make copy of user without 'deleting:true' property\n                        const {\n                            deleting,\n                            ...userCopy\n                        } = user;\n                        // return copy of user with 'deleteError:[error]' property\n                        return {\n                            ...userCopy,\n                            deleteError: action.error\n                        };\n                    }\n\n                    return user;\n                })\n            };\n        default:\n            return state\n    }\n}","import { alertConstants } from '../_constants';\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: 'alert-success',\n        message: action.message\n      };\n    case alertConstants.ERROR:\n      return {\n        type: 'alert-danger',\n        message: action.message\n      };\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../_reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);","export function authHeader() {\n    // return authorization header with jwt token\n    let user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n        return { 'Authorization': 'Bearer ' + user.token };\n    } else {\n        return {};\n    }\n}","import { alertConstants } from '../_constants';\n\nexport const alertActions = {\n    success,\n    error,\n    clear\n};\n\nfunction success(message) {\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message) {\n    return { type: alertConstants.ERROR, message };\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}","import { authHeader } from '../_helpers';\n\nexport const userService = {\n    buyBtc,\n    sellBtc,\n    login,\n    logout,\n    register,\n    getAll,\n    getById,\n    update,\n    delete: _delete\n};\n\nfunction login(username, hashedPassword) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, hashedPassword })\n    };\n\n    return Promise.all([\n        fetch(`/users/authenticate`, requestOptions),\n        fetch(`/rates`)\n    ])\n        .then(data => Promise.all([handleResponse(data[0]), handleResponse(data[1])]))\n        .then(response => {\n            const user = response[0].text;\n            const rates = response[1].text;\n            localStorage.setItem('rates', JSON.stringify(rates));\n            localStorage.setItem('user', JSON.stringify(user));\n            return { user, rates };\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction buyBtc(pair, amount, id) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({id, amount, pair})\n    }\n    return fetch(`/buyBtc`, requestOptions).then(handleResponse)\n        .then(response => {\n            const { user, rates } = response.text;\n            localStorage.setItem('user', JSON.stringify(user));\n            localStorage.setItem('rates', JSON.stringify(rates));\n            return { user, rates};\n        });\n}\n\nfunction sellBtc(pair, amount, id) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({pair, amount, id})\n    }\n    return fetch(`/sellBtc`, requestOptions).then(handleResponse)\n        .then(response => {\n            const { user, rates } = response.text;\n            localStorage.setItem('user', JSON.stringify(user));\n            localStorage.setItem('rates', JSON.stringify(rates));\n            return { user, rates};\n        });}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`/users`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`/users/${user.id}`, requestOptions).then(handleResponse);;\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    return fetch(`/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true); // eslint-disable-line no-restricted-globals\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\n\nexport const userActions = {\n    buyBtc,\n    sellBtc,\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                ({user, rates}) => {\n                    dispatch(success(user, rates));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user, rates) { return { type: userConstants.LOGIN_SUCCESS, user, rates } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => {\n                    dispatch(success());\n                    history.push('/login');\n                    dispatch(alertActions.success('Registration successful, you may now log in.'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\nfunction buyBtc(pair, amount, id) {\n    return dispatch => {\n        dispatch(request(pair, amount, id));\n\n        userService.buyBtc(pair, amount, id)\n            .then(\n                ({ user, rates}) => {\n                    dispatch(success(user, rates));\n                    dispatch(alertActions.success(`Trade successful, you bought ${amount} BTC with ${pair}.`));\n                }\n            )\n            .catch(error => {\n                    dispatch(failure(id, error.toString()));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(id) { return { type: userConstants.BUY_REQUEST, id } }\n    function success(user, rates) { return { type: userConstants.BUY_SUCCESS, user, rates } }\n    function failure(id, error) { return { type: userConstants.BUY_FAILURE, id, error } }\n}\n\nfunction sellBtc(pair, amount, id) {\n    return dispatch => {\n        dispatch(request(pair, amount, id));\n\n        userService.sellBtc(pair, amount, id)\n            .then(\n                ({ user, rates}) => {\n                    dispatch(success(user, rates));\n                    dispatch(alertActions.success(`Trade successful, you sold ${amount} BTC for ${pair}.`));\n                }\n            ).catch(error => {\n                    dispatch(failure(id, error.toString()));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(id) { return { type: userConstants.SELL_REQUEST, id } }\n    function success(user, rates) { return { type: userConstants.SELL_SUCCESS, user, rates } }\n    function failure(id, error) { return { type: userConstants.SELL_FAILURE, id, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}","import { modalActions } from '../_constants';\n\nexport const showModal = ({ modalProps, modalType }) => dispatch => {\n    dispatch({\n      type: modalActions.SHOW_MODAL,\n      modalProps,\n      modalType\n    });\n  }\n\n  export const hideModal = () => dispatch => {\n    dispatch({\n      type: modalActions.HIDE_MODAL\n    });\n  }\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n)","import React from 'react'\nimport { connect } from 'react-redux'\nimport ReactModal from 'react-modal';\nimport { TradeModal } from '../_components/Modals/TradeModal';\n\nconst MODAL_TYPES = {\n  'trade': TradeModal\n}\n\nconst mapStateToProps = state => ({\n  ...state.modal\n})\n\nclass ModalContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false\n    };\n    this.closeModal = this.closeModal.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.setState({\n        modalIsOpen: nextProps.modalProps.open\n      })\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false })\n  }\n\n  render() {\n    if (!this.props.modalType) {\n      return null\n    }\n    const SpecifiedModal = MODAL_TYPES[this.props.modalType]\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          contentLabel=\"Example Modal\"\n          ariaHideApp={false}\n          bodyOpenClassName=\"modal-open\"\n          className=\"modal-dialog modal-dialog-centered\"\n        >\n          <SpecifiedModal\n            closeModal={this.closeModal}\n            {...this.props.modalProps}\n          />\n        </ReactModal>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, null)(ModalContainer)","import React from 'react';\n\nexport const TradeModal = ({ closeModal, confirmAction, title, fields, onRadioChange, onInputChange, user, tradeCrypto }) => {\n    return (\n        <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{title}</h5>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeModal}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div className=\"modal-body\">\n                <form>\n                    <div layout=\"row\">\n                    </div>\n                    {\n                        fields.map(field => {\n                            return (\n                                <div className=\"form-group\" key={field.label}>\n                                    <label htmlFor=\"address\">{`${field.label}`}</label>\n                                    <input\n                                        id=\"address\"\n                                        name={field.name}\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder={`${field.placeholder}`}\n                                        onChange={onInputChange}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </form>\n            </div>\n            <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>Cancel</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={confirmAction}>Continue</button>\n            </div>\n        </div>\n    )\n};\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ModalRoot from '../App/ModalRoot';\nimport { showModal, hideModal } from '../_actions/modal.actions';\n\nimport { userActions } from '../_actions';\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.onInputChange = this.onInputChange.bind(this);\n        this.openTradeModal = this.openTradeModal.bind(this);\n        this.buyBtc = this.buyBtc.bind(this);\n        this.sellBtc = this.sellBtc.bind(this);\n    }\n\n    componentDidMount() {\n        // this.props.dispatch(userActions.getAll());\n    }\n\n    handleDeleteUser(id) {\n        return (e) => this.props.dispatch(userActions.delete(id));\n    }\n\n    onInputChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    buyBtc(event) {\n        event.preventDefault();\n        this.setState({ submitted: true });\n        this.props.dispatch(userActions.buyBtc(this.state.pair, this.state.btc, this.props.user.id));\n        this.props.hideModal();\n    }\n\n    sellBtc(event) {\n        event.preventDefault();\n        this.setState({ submitted: true });\n        this.props.dispatch(userActions.sellBtc(this.state.pair, this.state.btc, this.props.user.id))\n        this.props.hideModal();\n        // return this.props.sellBtc(this.state.pair, this.state.btc, this.props.user.id)\n        //     .then(response => {\n        //         this.props.hideModal();\n        //     })\n    }\n\n    openTradeModal(event) {\n        this.props.showModal({\n            open: true,\n            title: 'Trade Modal',\n            fields: [{\n                label: event.target.name === 'buy' ? 'Coin to Sell' : 'Coin to Buy',\n                name: 'pair',\n                placeholder: 'Enter coin name to sell (\"xmr\", \"ltc\", \"salt\", \"doge\", \"usd\")',\n            }, {\n                label: event.target.name === 'buy' ? 'Bitcoin Amount to Buy' : 'Bitcoin Amount to Sell',\n                name: 'btc',\n                placeholder: 'Enter bitcoin amount'\n            }],\n            onInputChange: this.onInputChange,\n            confirmAction: event.target.name === 'buy' ? this.buyBtc : this.sellBtc,\n            user: this.props.user,\n            crypto: this.tradeCrypto\n        }, 'trade')\n    }\n\n    render() {\n        const { user, rates } = this.props;\n        if (!user) {\n            return <Redirect to='/login' />\n        }\n        const totalBTCValue = _getBTCValue(user.balances, rates);\n        const totalUSDValue = Number(rates.usd) * totalBTCValue;\n        return (\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h3>Hi {user.username}!</h3>\n                <h3>Your Current Balances: </h3>\n                <h4>btc: ₿{Number(user.balances.btc).toFixed(8)}</h4>\n                <h4>xmr: ɱ{Number(user.balances.xmr).toFixed(8)}</h4>\n                <h4>ltc: Ł{Number(user.balances.ltc).toFixed(8)}</h4>\n                <h4>salt: Δ{Number(user.balances.salt).toFixed(8)}</h4>\n                <h4>doge: Ð{Number(user.balances.doge).toFixed(8)}</h4>\n                <h4>usd: ${Number(user.balances.usd).toFixed(2)}</h4>\n                <h4>Total Portfolio BTC Value: ₿{totalBTCValue.toFixed(8)}</h4>\n                <h4>Total Portfolio USD Value: ${totalUSDValue.toFixed(2)}</h4>\n                <h3>Current rates: </h3>\n                <h4>xmr: {rates.xmr} xmr/btc</h4>\n                <h4>ltc: {rates.ltc} ltc/btc</h4>\n                <h4>salt: {rates.salt} salt/btc</h4>\n                <h4>doge: {rates.doge} doge/btc</h4>\n                <h4>usd: {rates.usd} usd/btc</h4>\n                <div className=\"col\">\n                    <button\n                        className=\"btn btn-outline-primary btn-block\"\n                        name=\"buy\"\n                        onClick={this.openTradeModal}\n                    >Buy BTC</button>\n                </div>\n                <div className=\"col\">\n                    <button\n                        className=\"btn btn-outline-primary btn-block\"\n                        name=\"sell\"\n                        onClick={this.openTradeModal}\n                    >Sell BTC</button>\n                </div>\n                <p>\n                    <Link to=\"/login\">Logout</Link>\n                </p>\n                <ModalRoot />\n            </div>\n\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { authentication } = state;\n    let { user, rates } = authentication;\n    if (!user) user = JSON.parse(localStorage.getItem('user'));\n    if (!rates) rates = JSON.parse(localStorage.getItem('rates'));\n    return {\n        user,\n        rates\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch: dispatch,\n    buyBtc: (pair, amount, id) => dispatch(userActions.buyBtc(pair, amount, id)),\n    sellBtc: (pair, amount, id) => dispatch(userActions.sellBtc(pair, amount, id)),\n    logout: () => dispatch(userActions.logout()),\n    hideModal: () => dispatch(hideModal()),\n    showModal: (modalProps, modalType) => {\n        dispatch(showModal({ modalProps, modalType }))\n    }\n})\n\nfunction _getBTCValue(balances, rates) {\n    return Number(balances.btc) +\n        (Number(balances.xmr) / Number(rates.xmr)) +\n        (Number(balances.ltc) / Number(rates.ltc)) +\n        (Number(balances.salt) / Number(rates.salt)) +\n        (Number(balances.doge) / Number(rates.doge)) +\n        (Number(balances.usd) / Number(rates.usd));\n}\n\nconst connectedHomePage = connect(mapStateToProps, mapDispatchToProps)(HomePage);\nexport { connectedHomePage as HomePage };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as crypto from 'crypto';\n\nimport { userActions } from '../_actions';\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // reset login status\n        this.props.dispatch(userActions.logout());\n\n        this.state = {\n            username: '',\n            password: '',\n            submitted: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({ submitted: true });\n        const { username, password } = this.state;\n        const hashedPassword = crypto.createHash('sha256').update(password).digest('hex');\n        const { dispatch } = this.props;\n        if (username && hashedPassword) {\n            dispatch(userActions.login(username, hashedPassword));\n        }\n    }\n\n    render() {\n        const { username, password, submitted } = this.state;\n        return (\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                <form name=\"form\" onSubmit={this.handleSubmit}>\n                    <div className={'form-group' + (submitted && !username ? ' has-error' : '')}>\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" name=\"username\" value={username} onChange={this.handleChange} />\n                        {submitted && !username &&\n                            <div className=\"help-block\">Username is required</div>\n                        }\n                    </div>\n                    <div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={this.handleChange} />\n                        {submitted && !password &&\n                            <div className=\"help-block\">Password is required</div>\n                        }\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\">Login</button>\n                        <Link to=\"/register\" className=\"btn btn-link\">Register</Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { loggingIn } = state.authentication;\n    return {\n        loggingIn\n    };\n}\n\nconst connectedLoginPage = connect(mapStateToProps)(LoginPage);\nexport { connectedLoginPage as LoginPage };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as crypto from 'crypto';\n\nimport { userActions } from '../_actions';\n\nclass RegisterPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {\n                username: '',\n                password: ''\n            },\n            submitted: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        const { user } = this.state;\n        this.setState({\n            user: {\n                ...user,\n                [name]: value\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({ submitted: true });\n        const { user } = this.state;\n        const { dispatch } = this.props;\n        user.hashedPassword = crypto.createHash('sha256').update(user.password).digest('hex');\n        if (user.username && user.hashedPassword) {\n            dispatch(userActions.register(user));\n        }\n    }\n\n    render() {\n        const { user, submitted } = this.state;\n        return (\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Register</h2>\n                <form name=\"form\" onSubmit={this.handleSubmit}>\n                    <div className={'form-group' + (submitted && !user.username ? ' has-error' : '')}>\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" name=\"username\" value={user.username} onChange={this.handleChange} />\n                        {submitted && !user.username &&\n                            <div className=\"help-block\">Username is required</div>\n                        }\n                    </div>\n                    <div className={'form-group' + (submitted && !user.password ? ' has-error' : '')}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={user.password} onChange={this.handleChange} />\n                        {submitted && !user.password &&\n                            <div className=\"help-block\">Password is required</div>\n                        }\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\">Register</button>\n                        <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { registering } = state.registration;\n    return {\n        registering\n    };\n}\n\nconst connectedRegisterPage = connect(mapStateToProps)(RegisterPage);\nexport { connectedRegisterPage as RegisterPage };","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { history } from '../_helpers';\nimport { alertActions } from '../_actions';\nimport { PrivateRoute } from '../_components';\nimport { HomePage } from '../HomePage';\nimport { LoginPage } from '../LoginPage';\nimport { RegisterPage } from '../RegisterPage';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dispatch } = this.props;\n        history.listen((location, action) => {\n            // clear alert on location change\n            dispatch(alertActions.clear());\n        });\n    }\n\n    render() {\n        const { alert } = this.props;\n        return (\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <div className=\"col-sm-8 col-sm-offset-2\">\n                        {alert.message &&\n                            <div className={`alert ${alert.type}`}>{alert.message}</div>\n                        }\n                        <Router history={history}>\n                            <div>\n                                <PrivateRoute exact path=\"/\" component={HomePage} />\n                                <Route path=\"/login\" component={LoginPage} />\n                                <Route path=\"/register\" component={RegisterPage} />\n                            </div>\n                        </Router>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { alert } = state;\n    return {\n        alert\n    };\n}\n\nconst connectedApp = connect(mapStateToProps)(App);\nexport { connectedApp as App }; ","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './_helpers';\nimport { App } from './App';\n\n// setup fake backend\n// import { configureFakeBackend } from './_helpers';\n// configureFakeBackend();\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('app')\n);"],"sourceRoot":""}